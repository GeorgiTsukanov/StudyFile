% 1. Создание матрицы A и вычисление A_плод (произведение элементов матрицы A)
% Предположим, что матрица A уже задана или создадим примерную
n = 5; % Размер матрицы (можно изменить)
A = rand(n); % Создаем случайную матрицу n x n

A_плод = prod(A, 'all'); % Произведение всех элементов матрицы A

% 2. Создание массива B3 с элементами b1 = log(2 + cos(i)), i=1..n
i = 1:n;
B = log(2 + cos(i)); % Создаем массив B

% 3. Формирование массива AI из средних значений элементов строк матрицы A
AI = mean(A, 2); % mean по второму измерению (по столбцам)

% 4. Упорядочивание массива AI по возрастанию
AI_sorted = sort(AI, 'ascend');

% 5. Упорядочивание массива B по убыванию
B_sorted = sort(B, 'descend');

% 6. Поэлементное умножение отсортированного по возрастанию AI и отсортированного по убыванию B
% Проверяем размеры массивов - они должны совпадать
if length(AI_sorted) == length(B_sorted)
    result = AI_sorted .* B_sorted; % Поэлементное умножение
else
    error('Размеры массивов AI и B не совпадают для поэлементного умножения');
end

% Вывод результатов
disp('Исходная матрица A:');
disp(A);
disp(['Произведение всех элементов матрицы A (A_плод): ', num2str(A_плод)]);
disp('Массив B:');
disp(B);
disp('Массив AI (средние значения строк матрицы A):');
disp(AI);
disp('Массив AI, отсортированный по возрастанию:');
disp(AI_sorted);
disp('Массив B, отсортированный по убыванию:');
disp(B_sorted);
disp('Результат поэлементного умножения AI_sorted .* B_sorted:');
disp(result);
